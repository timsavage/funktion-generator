/************************************************
 * Funktion Generator
 *
 * Author: Tim Savage
 * Target: ATMega328
 * Date:   2017-03-08
 * Based off the work of Jesper Hansen
 ***********************************************/

#include <avr/io.h>

#define TMP	r16
#define	WT_H	r31
#define WT_L	r30
#define FIX_H	r29
#define FIX_L	r28
#define WT_V	r27
#define STEP_HL r26
#define STEP_LH r25
#define STEP_LL r24

.section 	.text
.org 0
	rjmp	MAIN

/************************************************
 * Waveform Tables
 ***********************************************/

.org 0x80  // Force to 256 byte boundary

signwave:
	.byte	0x80,0x83,0x86,0x89,0x8c,0x8f,0x92,0x95,0x98,0x9c,0x9f,0xa2,0xa5,0xa8,0xab,0xae
	.byte	0xb0,0xb3,0xb6,0xb9,0xbc,0xbf,0xc1,0xc4,0xc7,0xc9,0xcc,0xce,0xd1,0xd3,0xd5,0xd8
	.byte	0xda,0xdc,0xde,0xe0,0xe2,0xe4,0xe6,0xe8,0xea,0xec,0xed,0xef,0xf0,0xf2,0xf3,0xf5
	.byte	0xf6,0xf7,0xf8,0xf9,0xfa,0xfb,0xfc,0xfc,0xfd,0xfe,0xfe,0xff,0xff,0xff,0xff,0xff
	.byte	0xff,0xff,0xff,0xff,0xff,0xff,0xfe,0xfe,0xfd,0xfc,0xfc,0xfb,0xfa,0xf9,0xf8,0xf7
	.byte	0xf6,0xf5,0xf3,0xf2,0xf0,0xef,0xed,0xec,0xea,0xe8,0xe6,0xe4,0xe2,0xe0,0xde,0xdc
	.byte	0xda,0xd8,0xd5,0xd3,0xd1,0xce,0xcc,0xc9,0xc7,0xc4,0xc1,0xbf,0xbc,0xb9,0xb6,0xb3
	.byte	0xb0,0xae,0xab,0xa8,0xa5,0xa2,0x9f,0x9c,0x98,0x95,0x92,0x8f,0x8c,0x89,0x86,0x83
	.byte	0x80,0x7c,0x79,0x76,0x73,0x70,0x6d,0x6a,0x67,0x63,0x60,0x5d,0x5a,0x57,0x54,0x51
	.byte	0x4f,0x4c,0x49,0x46,0x43,0x40,0x3e,0x3b,0x38,0x36,0x33,0x31,0x2e,0x2c,0x2a,0x27
	.byte	0x25,0x23,0x21,0x1f,0x1d,0x1b,0x19,0x17,0x15,0x13,0x12,0x10,0x0f,0x0d,0x0c,0x0a
	.byte	0x09,0x08,0x07,0x06,0x05,0x04,0x03,0x03,0x02,0x01,0x01,0x00,0x00,0x00,0x00,0x00
	.byte	0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x01,0x02,0x03,0x03,0x04,0x05,0x06,0x07,0x08
	.byte	0x09,0x0a,0x0c,0x0d,0x0f,0x10,0x12,0x13,0x15,0x17,0x19,0x1b,0x1d,0x1f,0x21,0x23
	.byte	0x25,0x27,0x2a,0x2c,0x2e,0x31,0x33,0x36,0x38,0x3b,0x3e,0x40,0x43,0x46,0x49,0x4c
	.byte	0x4f,0x51,0x54,0x57,0x5a,0x5d,0x60,0x63,0x67,0x6a,0x6d,0x70,0x73,0x76,0x79,0x7c

MAIN:
//	ldi	r16, RAMEND	// Setup stack pointer
//	out	SPL, r16

	sei			// Enable global interrupts

	ser	TMP
	out 	DDRD, TMP	// Set PORTD as outputs
	
	// Set sinewave as the default
	ldi	WT_H, 1
	ldi	WT_L, 0

	// Clear counter
	clr	FIX_H
	clr	FIX_L

	// Setup steps
	ldi	STEP_LL, 0x55
	ldi	STEP_LH, 0x35
	ldi	STEP_HL, 0x0

LOOP:
	add	FIX_L, STEP_LL			// 1 clock
	adc	FIX_H, STEP_LH			// 1 clock
	adc	WT_L, STEP_HL			// 1 clock
	ld	WT_V, Z				// 2 clocks
	out	_SFR_IO_ADDR(PORTD), WT_V	// 1 clock
	rjmp	LOOP				// 2 clocks
						// --------
						// 8 clocks

